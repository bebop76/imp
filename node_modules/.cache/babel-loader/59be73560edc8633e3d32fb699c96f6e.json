{"ast":null,"code":"import _toConsumableArray from\"C:/React/Gioco - Hangman/Mia versione/impiccapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/React/Gioco - Hangman/Mia versione/impiccapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./App.css';import Header from'./components/Header';import Figure from'./components/Figure';import WrongLetters from'./components/WrongLetters';import Word from'./components/Word';import{showNotify}from'./fun/core';import Notification from'./components/Notification';import Popup from'./components/Popup';import{words}from'./fun/data';// let words = []\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var selectedWord=words[Math.floor(Math.random()*words.length)];function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),correctLetters=_useState2[0],setCorrectLetters=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),wrongLetters=_useState4[0],setWrongLetters=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),playable=_useState6[0],setPlayable=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showNotif=_useState8[0],setShowNotif=_useState8[1];useEffect(function(){var handleKey=function handleKey(e){var key=e.key,keyCode=e.keyCode;if(playable&&keyCode>=65&&keyCode<=90){var letterChoosed=key.toLowerCase();if(selectedWord.includes(letterChoosed)){if(!correctLetters.includes(letterChoosed)){setCorrectLetters([].concat(_toConsumableArray(correctLetters),[letterChoosed]));}else{showNotify(setShowNotif);}}else{if(!wrongLetters.includes(letterChoosed)){setWrongLetters([].concat(_toConsumableArray(wrongLetters),[letterChoosed]));}else{showNotify(setShowNotif);}}}else{if(playable===true){alert('Tasto non ammesso - usare solo lettere');}}};window.addEventListener(\"keydown\",handleKey);return function(){return window.removeEventListener('keydown',handleKey);};},[playable,correctLetters,wrongLetters]);var playAgain=function playAgain(){setPlayable(true);setWrongLetters([]);setCorrectLetters([]);var otherRandWord=Math.floor(Math.random()*words.length);selectedWord=words[otherRandWord];};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",style:{width:\"100%\"},children:[/*#__PURE__*/_jsx(WrongLetters,{wrongLetters:wrongLetters}),/*#__PURE__*/_jsx(Figure,{wrongLetters:wrongLetters})]}),/*#__PURE__*/_jsx(Word,{correctLetters:correctLetters,selectedWord:selectedWord}),/*#__PURE__*/_jsx(Popup,{selectedWord:selectedWord,correctLetters:correctLetters,wrongLetters:wrongLetters,setPlayable:setPlayable,playAgain:playAgain}),/*#__PURE__*/_jsx(Notification,{showNotif:showNotif})]});}export default App;","map":{"version":3,"sources":["C:/React/Gioco - Hangman/Mia versione/impiccapp/src/App.js"],"names":["React","useEffect","useState","Header","Figure","WrongLetters","Word","showNotify","Notification","Popup","words","selectedWord","Math","floor","random","length","App","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","playable","setPlayable","showNotif","setShowNotif","handleKey","e","key","keyCode","letterChoosed","toLowerCase","includes","alert","window","addEventListener","removeEventListener","playAgain","otherRandWord","width"],"mappings":"oVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OAAQC,KAAR,KAAoB,YAApB,CAEA;6IACA,GAAIC,CAAAA,YAAY,CAAGD,KAAK,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBJ,KAAK,CAACK,MAAjC,CAAD,CAAxB,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA4Cd,QAAQ,CAAC,EAAD,CAApD,wCAAOe,cAAP,eAAuBC,iBAAvB,eACA,eAAwChB,QAAQ,CAAC,EAAD,CAAhD,yCAAOiB,YAAP,eAAqBC,eAArB,eACA,eAAgClB,QAAQ,CAAC,IAAD,CAAxC,yCAAOmB,QAAP,eAAiBC,WAAjB,eACA,eAAkCpB,QAAQ,CAAC,KAAD,CAA1C,yCAAOqB,SAAP,eAAkBC,YAAlB,eAEAvB,SAAS,CAAC,UAAM,CACd,GAAMwB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,CAAM,CACtB,GAAOC,CAAAA,GAAP,CAAuBD,CAAvB,CAAOC,GAAP,CAAYC,OAAZ,CAAuBF,CAAvB,CAAYE,OAAZ,CACA,GAAIP,QAAQ,EAAIO,OAAO,EAAG,EAAtB,EAA4BA,OAAO,EAAI,EAA3C,CAA8C,CAC5C,GAAMC,CAAAA,aAAa,CAAGF,GAAG,CAACG,WAAJ,EAAtB,CACA,GAAGnB,YAAY,CAACoB,QAAb,CAAsBF,aAAtB,CAAH,CAAyC,CACvC,GAAG,CAACZ,cAAc,CAACc,QAAf,CAAwBF,aAAxB,CAAJ,CAA2C,CACzCX,iBAAiB,8BAAKD,cAAL,GAAqBY,aAArB,GAAjB,CACD,CAFD,IAEK,CACHtB,UAAU,CAACiB,YAAD,CAAV,CACD,CACF,CAND,IAMK,CACH,GAAG,CAACL,YAAY,CAACY,QAAb,CAAsBF,aAAtB,CAAJ,CAAyC,CACvCT,eAAe,8BAAKD,YAAL,GAAmBU,aAAnB,GAAf,CACD,CAFD,IAEK,CACHtB,UAAU,CAACiB,YAAD,CAAV,CACD,CACF,CAEF,CAhBD,IAgBK,CACH,GAAIH,QAAQ,GAAK,IAAjB,CAAsB,CACpBW,KAAK,CAAC,wCAAD,CAAL,CACD,CACF,CACF,CAvBD,CAwBAC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCT,SAAnC,EACA,MAAO,kBAAMQ,CAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCV,SAAtC,CAAN,EAAP,CACD,CA3BQ,CA2BP,CAACJ,QAAD,CAAUJ,cAAV,CAAyBE,YAAzB,CA3BO,CAAT,CA6BA,GAAMiB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBd,WAAW,CAAC,IAAD,CAAX,CACAF,eAAe,CAAC,EAAD,CAAf,CACAF,iBAAiB,CAAC,EAAD,CAAjB,CACA,GAAMmB,CAAAA,aAAa,CAAGzB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBJ,KAAK,CAACK,MAAjC,CAAtB,CACAJ,YAAY,CAAGD,KAAK,CAAC2B,aAAD,CAApB,CACD,CAND,CAQA,mBACE,wCACA,KAAC,MAAD,IADA,cAEA,aAAK,SAAS,CAAC,gBAAf,CAAgC,KAAK,CAAE,CAACC,KAAK,CAAE,MAAR,CAAvC,wBACE,KAAC,YAAD,EAAc,YAAY,CAAEnB,YAA5B,EADF,cAEE,KAAC,MAAD,EAAQ,YAAY,CAAEA,YAAtB,EAFF,GAFA,cAMA,KAAC,IAAD,EAAM,cAAc,CAAEF,cAAtB,CAAsC,YAAY,CAAEN,YAApD,EANA,cAOA,KAAC,KAAD,EAAO,YAAY,CAAEA,YAArB,CAAmC,cAAc,CAAEM,cAAnD,CACA,YAAY,CAAEE,YADd,CAC4B,WAAW,CAAEG,WADzC,CACsD,SAAS,CAAEc,SADjE,EAPA,cASA,KAAC,YAAD,EAAc,SAAS,CAAEb,SAAzB,EATA,GADF,CAaD,CAED,cAAeP,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Figure from './components/Figure'\nimport WrongLetters from './components/WrongLetters'\nimport Word from './components/Word'\nimport { showNotify } from './fun/core'\nimport Notification from './components/Notification'\nimport Popup from './components/Popup'\nimport {words} from './fun/data'\n\n// let words = []\nlet selectedWord = words[Math.floor(Math.random() * words.length)]\n\nfunction App() {\n  const [correctLetters, setCorrectLetters] = useState([])\n  const [wrongLetters, setWrongLetters] = useState([])\n  const [playable, setPlayable] = useState(true)\n  const [showNotif, setShowNotif] = useState(false)\n\n  useEffect(() => {\n    const handleKey = (e) =>{\n      const {key, keyCode} = e\n      if (playable && keyCode >=65 && keyCode <= 90){\n        const letterChoosed = key.toLowerCase()\n        if(selectedWord.includes(letterChoosed)) {\n          if(!correctLetters.includes(letterChoosed)){\n            setCorrectLetters([...correctLetters, letterChoosed])\n          }else{\n            showNotify(setShowNotif)\n          }\n        }else{\n          if(!wrongLetters.includes(letterChoosed)){\n            setWrongLetters([...wrongLetters, letterChoosed])\n          }else{\n            showNotify(setShowNotif)\n          }\n        }\n\n      }else{\n        if (playable === true){\n          alert('Tasto non ammesso - usare solo lettere')\n        }\n      }\n    }\n    window.addEventListener(\"keydown\", handleKey)\n    return () => window.removeEventListener('keydown', handleKey)\n  },[playable,correctLetters,wrongLetters])\n\n  const playAgain = () => {\n    setPlayable(true)\n    setWrongLetters([])\n    setCorrectLetters([])\n    const otherRandWord = Math.floor(Math.random() * words.length)\n    selectedWord = words[otherRandWord]\n  }\n\n  return (\n    <>\n    <Header />\n    <div className=\"game-container\" style={{width: \"100%\"}}>\n      <WrongLetters wrongLetters={wrongLetters} />\n      <Figure wrongLetters={wrongLetters}/>\n    </div>\n    <Word correctLetters={correctLetters} selectedWord={selectedWord}/>\n    <Popup selectedWord={selectedWord} correctLetters={correctLetters}\n    wrongLetters={wrongLetters} setPlayable={setPlayable} playAgain={playAgain} />\n    <Notification showNotif={showNotif} />    \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}